//***********Constants***********var KGS_PER_POUND   = 0.453592;var INCHES_IN_FOOT  = 12;var CMS_PER_INCH    = 2.54;var CMS_PER_METRE   = 100;var INPUT_ERROR_MSG = "That was not a valid measurement unit. Please try again";var IDEAL_BMI_LOWER = 18.5;var IDEAL_BMI_UPPER = 25;//***********Global Variables***********var unitsField = 1;if (document.getElementById("bmi_unit_metric").checked) {  unitsField = 2;}var poundsField = document.getElementById("bmi_weight_pounds");var kgsField    = document.getElementById("bmi_weight_kgs");var feetField   = document.getElementById("bmi_height_feet");var inchesField = document.getElementById("bmi_height_inches");var cmsField    = document.getElementById("bmi_height_cms");//***********Register Event handlers***********document.getElementById("bmi_calc_button").onclick = function() { outputBmi() };document.getElementById("bmi_unit_metric").onclick = function() { updateForm( "unitfld" ) };document.getElementById("bmi_unit_us").onclick = function() { updateForm( "unitfld" ) };poundsField.onchange  = function() { updateForm( "poundsfld" ) };kgsField.onchange     = function() { updateForm( "kgsfld" ) };feetField.onchange    = function() { updateForm( "feetfld" ) };inchesField.onchange  = function() { updateForm( "inchesfld" ) };cmsField.onchange     = function() { updateForm( "cmsfld" ) };//***********Helper rounding number Functions***********function roundTwoDecimals ( number ) {    return  Math.round ( number * 100 )  / 100 ; }function roundOneDecimal ( number ) {    return  Math.round ( number * 10 )  / 10 ; }function toInteger(number) {     return Math.round ( Number ( number ) ); }function toIntegerFloor ( number ) {    return Math.floor ( Number ( number) ); }//***********Helper function for updateForm***********// deal with a Not a Number input in the specified fieldfunction processNaNInput ( field ) {    field.value = "";    field.focus();    alert(INPUT_ERROR_MSG);}//**********************//  updates the fields for the corresponding units of measure after a field is updatedfunction updateForm ( updatedField ) {    if ( updatedField === "poundsfld" ) {           if ( isNaN ( poundsField.value ) ) {            processNaNInput(poundsField);        }        else if ( poundsField.value === "" ) {            kgsField.value = "";        }           else {            var poundsFldInKgs = poundsField.value * KGS_PER_POUND;            var totalKgs = poundsFldInKgs;            kgsField.value = roundTwoDecimals ( totalKgs );        }    }    else if ( updatedField === "kgsfld" ) {        if ( isNaN ( kgsField.value ) ) {            processNaNInput( kgsField );                }           else if ( kgsField.value === "") {            poundsField.value = "";        }           else {               var totalKgsInPounds = kgsField.value / KGS_PER_POUND;            poundsField.value = roundOneDecimal(totalKgsInPounds);        }       }    else if ( updatedField === "feetfld" || updatedField === "inchesfld" ) {           if ( isNaN ( feetField.value ) ) {            processNaNInput(feetField);             }           else if ( isNaN ( inchesField.value ) ) {            processNaNInput(inchesField);               }           else if ( feetField.value === "" && inchesField.value === "" ) {            cmsField.value = "";        }        else {            var feetFldInCms = ( feetField.value * INCHES_IN_FOOT ) * CMS_PER_INCH;            var inchesFldInCms = inchesField.value * CMS_PER_INCH;            var totalCms = feetFldInCms + inchesFldInCms;            cmsField.value = roundTwoDecimals ( totalCms );         }    }    else if ( updatedField === "cmsfld" ) {        if ( isNaN ( cmsField.value ) ) {            processNaNInput(cmsField);              }            else if ( cmsField.value === "" ) {            feetField.value = "";            inchesField.value = "";        }        else {            var cmsFldInInches = cmsField.value / CMS_PER_INCH;            var numFeet = cmsFldInInches / INCHES_IN_FOOT;            var numInches = cmsFldInInches % INCHES_IN_FOOT;            feetField.value = toIntegerFloor ( numFeet );            inchesField.value = roundOneDecimal ( numInches );        }    }    else if ( updatedField === "unitfld" ) {      if (document.getElementById("bmi_unit_metric").checked) {        unitsField = 2;      }      else {        unitsField = 1;      }              if (unitsField === 1) {        document.getElementById("bmi_weight_metric").style.display = 'none';        document.getElementById("bmi_weight_us").style.display = 'block';        document.getElementById("bmi_height_metric").style.display = 'none';        document.getElementById("bmi_height_us").style.display = 'block';      }      else {        document.getElementById("bmi_weight_metric").style.display = 'block';        document.getElementById("bmi_weight_us").style.display = 'none';        document.getElementById("bmi_height_metric").style.display = 'block';        document.getElementById("bmi_height_us").style.display = 'none';      }    }    else {        alert ( "Invalid parmater passed to completeForm function" )    }}   
//***********Helper Functions Called by calculateBMI***********// check if any of the fields in the form are empty and if empty outputs// an error message. Returns false is the form is fully filled out function hasEmptyFlds ( ) {    // If all fields are empty output a message    if ( ( poundsField.value === null || poundsField.value === "" ) && ( kgsField.value === null || kgsField.value === "" ) &&        ( feetField.value === null || feetField.value === "" ) && ( inchesField.value === null || inchesField.value === "" ) && ( cmsField.value === null || cmsField.value === "" ) ) {      alert( "Please enter a weight and height" );       return true;    }    // If weight fields of the form are not filled out output an message    else if (  kgsField.value === null || kgsField.value === "" ) {        alert ( "Please enter a weight" );        return true;    }     // If the height fields of the form are not filled out output a message    else if (  cmsField.value === null || cmsField.value === ""  ) {        alert ( "Please enter a height" );        return true;    }    else {        return false;    }   }// returns the name of the bmi category for a given bmifunction getBmiCategory ( bmi ) {    if ( bmi < 15 ) {        return "Very severely underweight";    }    else if ( bmi < 16 ) {        return "Severely underweight";    }       else if ( bmi < 18.5 ) {        return "Underweight";    }    else if ( bmi < 25 ) {           return "Healthy weight";    }       else if ( bmi < 30 ) {        return "Overweight";    }       else if ( bmi < 35 ) {        return "Moderately obese";    }       else if ( bmi < 40 ) {        return "Severely obese";    }    else {        return "Very severely obese";    }   }//**********************// calculates and outputs bmi, bmi category, ideal bmi range, ideal weight range and percent over or under ideal weight function outputBmi ( ) {    if ( ! hasEmptyFlds ( )  ) {        var heightInMetres = cmsField.value / 100;        var bmi = roundOneDecimal ( kgsField.value /  ( heightInMetres * heightInMetres ) );        var category = getBmiCategory ( bmi );         //lower weight cut off for a healthy bmi        var lowerKgs = toInteger ( IDEAL_BMI_LOWER * ( heightInMetres * heightInMetres ) );        //upper weight cut off for a healthy bmi        var upperKgs = toInteger ( IDEAL_BMI_UPPER * ( heightInMetres * heightInMetres ) );                 //convert lower cut off from kgs to stone and pounds        var totalLowerPounds = roundTwoDecimals(lowerKgs / KGS_PER_POUND);        //convert upper cut off from kgs to stone and pounds        var totalUpperPounds = roundTwoDecimals(upperKgs / KGS_PER_POUND);        var html = "<h5>Results</h5>";        html += "<p>Your BMI is : <strong>" + bmi + "</strong> </p><p> Your BMI is in the " + category + " category</p>";        html += "<p>Healthy BMI is between: 18.5 and 25</p>";        html += "<p>Healthy weight for your height is between: ";        if (unitsField === 1) {          html += "<strong>" + totalLowerPounds + "</strong> lbs and <strong>" + totalUpperPounds + "</strong> lbs</p>";        }        else {          html += "<strong>" + lowerKgs + "</strong> kgs and <strong>" + upperKgs + "</strong> kgs</p>";        }        document.getElementById( 'bmi_calc_results' ).innerHTML = html;        document.getElementById("bmi_calc_results").style.display = 'block';    }   }